!function(){define("text!templates/app.html",[],function(){return'<!-- Template for App View -->\n<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">\n</script>\n<script type="text/x-mathjax-config">\nMathJax.Hub.Config({\n    tex2jax: {\n        inlineMath: [\n            [\'$$$\', \'$$$\'],\n            [\'\\\\(\', \'\\\\)\']\n        ]\n    }\n});\n</script>\n\n<div class="container">\n<a href="https://github.com/myrtleTree33/generator-school-report"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://github-camo.global.ssl.fastly.net/365986a132ccd6a44c23a9169022c0b5c890c387/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f7265645f6161303030302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_red_aa0000.png"></a>\n\n# School Report\n\n| Name | Organization | Date | \n|--|--|\n| jhtong | NUS | Feb 20, 2014 |\n\n## Introduction\n\n### What exactly is this?\n\nTyping LaTeX reports for short school projects is a pain.  Writing Markdown\'s easy - but you don\'t get Math.  This generator combines the power of Markdown - with the Math typesetting capability of $$$\\LaTeX$$$.\n\n### Why bother?\n\nI needed it for my assignments.\n\n\n### Installation\n\n`generator-school-report` runs on NodeJS and Ruby.  You\'ll also need `compass`, `coffee` and `sass`.\n\nInstall `grunt`, `grunt-cli`, `bower`, and `yo`, as per the Yeoman framework.  Then run:\n\n```bash\n$ npm install -g generator-school-report\n$ mkdir my-first-report && cd $_\n$ yo school-report\n```\n\nTo start the server:\n\n```bash\n$ grunt server\n```\n\nYou\'ve got a Live, printer-friendly school report going!\n\nTo export it as a ready-to-roll HTML page, do:\n\n```bash\n$ grunt\n```\n\n\n### Did you say printing?\n\nYes!  `generator-school-report` comes with a printer-friendly adaptive template.  Margins and colors are printed nicely, as you would in a school report.  Plus, the fonts are paired for you.  Just plug and play.  Yay.\n\n\n### What\'s in?\n\n- SASS / SCSS-style stylesheets\n- Compass / Bourbon\n- A stylesheet that is optimized for print, ready to roll\n- Live update - edit your markdown as you go\n- Organize your Markdown \n\n\n## Quick tutorial\n\n### Headers\n\n| Header | What it does |\n| -- | -- |\n| `h1` | Main title |\n| `h2` | Section title on a new page. |\n| `h3` - `h6` | Sub-section titles |\n\n### Markdown refresher\n\n\n*This is italic text*\n\nThis contains some inline $$$\\frac {a + 3} {b + c}$$$ latex text\n\nAn equation can be written as follow:\n\n**Multiline**\n\n$$\\begin{eqnarray}\na + b &=& 3 \\\\\\\nb &=& 3 - a\n\\end{eqnarray}$$\n\n*Single line*\n\n$$\nF = G \\frac {m_1 m_2} {r^2}\n$$\n\nWriting some `inline code` or perhaps functions.  If the language is not specified, automatic syntax highlighting is used:\n\n	function() {\n		console.log("hello world");\n	}\n\nWriting some language-specific code: \n\n```js\n/** Memoization example from \n  * http://www.sitepoint.com/implementing-memoization-in-javascript/\n  */\nfunction memoize(func) {\n  var memo = {};\n  var slice = Array.prototype.slice;\n\n  return function() {\n    var args = slice.call(arguments);\n\n    if (args in memo)\n      return memo[args];\n    else\n      return (memo[args] = func.apply(this, args));\n\n  }\n}\n```\n\nOh, and HTML tags are supported as well.\n\n### Where are all \'em Markdown files?\n\nDive into the `src/markdown/` folder.  These are concatenated at runtime, sorted alphabetically by filename.\n\n\n## Contribute\n\nFork this repository at https://github.com/myrtleTree33/generator-school-report\n\n### Credit\n\n- Joel H Tong \n- `jhtong`, `mrytletree33`\n- http://joeltong.org/\n- File bugs in the bug report thank you.\n- Forked from `generator-footguard`\n\n</div>\n'}),function(){var a={}.hasOwnProperty,b=function(b,c){function d(){this.constructor=b}for(var e in c)a.call(c,e)&&(b[e]=c[e]);return d.prototype=c.prototype,b.prototype=new d,b.__super__=c.prototype,b};define("app/views/app_view",["backbone","underscore","text!templates/app.html"],function(a,c,d){var e,f,g;return e=function(a){function e(){return g=e.__super__.constructor.apply(this,arguments)}return b(e,a),e.prototype.el="#total",e.prototype.events={},e.prototype.initialize=function(){return console.log(marked("some markdown"))},e.prototype.render=function(){var a,b;return this.$el.html(c.template(d,{})),marked.setOptions({highlight:function(a,b){return b?hljs.highlight(b,a).value:hljs.highlightAuto(a).value}}),b=Backbone.$("div.container"),a=b.html(),b.html(marked(a))},e}(Backbone.View),f=new e})}.call(this),function(){var a={}.hasOwnProperty,b=function(b,c){function d(){this.constructor=b}for(var e in c)a.call(c,e)&&(b[e]=c[e]);return d.prototype=c.prototype,b.prototype=new d,b.__super__=c.prototype,b};define("app/router",["backbone","app/views/app_view"],function(a,c){var d,e;return d=function(d){function f(){return e=f.__super__.constructor.apply(this,arguments)}return b(f,d),f.prototype.routes={"*actions":"defaultAction"},f.prototype.initialize=function(){return c.render(),a.history.start()},f.prototype.defaultAction=function(a){return console.log("Unhandled route "+a)},f}(a.Router)})}.call(this),function(){define("config",["underscore"],function(a){return a.extend({key:"value"},window.Config)})}.call(this),function(){define("app/app",["app/router","config"],function(a){var b,c;return b=null,c=function(){return b=new a},{router:b,initialize:c}})}.call(this)}();